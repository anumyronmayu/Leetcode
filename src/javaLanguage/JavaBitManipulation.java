package javaLanguage;

public class JavaBitManipulation {

	public static void main(String[] args) {

		/*
		 * ~, &, |, ^, >>, >>>, <<
		 * 
		 * int 32bits, long 64bits 
		 * int i = 1;
		 * 正数没有反码、补码，也可以说正数的反码、补码跟原码一样。
		 * 原码，反码，补码：00000000000000000000000000000001
		 * 
		 * int i = -1;
		 * 原码：10000000000000000000000000000001
		 * 反码为原码逐位取反
		 * 反码：01111111111111111111111111111110
		 * 补码为反码加1
		 * 补码：01111111111111111111111111111111
		 * 
		 * ^ 异或。 相同为0，相异为1； 任何数与0异或都等于原值。　 
		 * & 与。 全1为1， 有0为0；任何数与0与都等于0。 
		 * | 或。 有1为1， 全0为0。任何数与0或都等于原值。 
		 * << 左移。 补0。 
		 * >> 右移。 符号位是0补0，是1补1。 
		 * >>>无符号右移。补0。 
		 * ~  非 逐位取反
		 * 
		 * 负数用补码参与运算
		 * 
		 */

	}

}
